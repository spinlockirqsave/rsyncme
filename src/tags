!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CC	Makefile	/^CC = gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS	=$/;"	m
CFLAGS_DEBUG	Makefile	/^CFLAGS_DEBUG = -c -g3 -O0 -DDEBUG -Wall -Wextra -std=c99 -pedantic -Wformat -Wno-unused-function -Wfatal-errors -Werror$/;"	m
CFLAGS_RELEASE	Makefile	/^CFLAGS_RELEASE = -c -o3 -DNDEBUG -Wall -Wextra -std=c99 -pedantic -Wformat -Wno-unused-function -Wfatal-errors -Werror$/;"	m
CMDDEBUGTARGET	Makefile	/^CMDDEBUGTARGET = ..\/build\/debug\/rsyncme$/;"	m
CMDRELEASETARGET	Makefile	/^CMDRELEASETARGET = ..\/build\/release\/rsyncme$/;"	m
DEBUGOBJECTS	Makefile	/^DEBUGOBJECTS = $(patsubst %,$(DEBUGOUTPUTDIR)\/%,$(_OBJECTS))$/;"	m
DEBUGOBJECTS_NO_MAIN	Makefile	/^DEBUGOBJECTS_NO_MAIN = $(filter-out $(DEBUGOUTPUTDIR)\/rm_daemon.o, $(DEBUGOBJECTS))$/;"	m
DEBUGOUTPUTDIR	Makefile	/^DEBUGOUTPUTDIR = ..\/build\/debug$/;"	m
DEBUGTARGET	Makefile	/^DEBUGTARGET = ..\/build\/debug\/rsyncme_d$/;"	m
F	md5.c	21;"	d	file:
FF	md5.c	26;"	d	file:
G	md5.c	22;"	d	file:
GG	md5.c	28;"	d	file:
H	md5.c	23;"	d	file:
HH	md5.c	30;"	d	file:
I	md5.c	24;"	d	file:
II	md5.c	32;"	d	file:
INCLUDES	Makefile	/^INCLUDES = -I. -I..\/include -I..\/include\/twlist\/include$/;"	m
LDFLAGS	Makefile	/^LDFLAGS = #-lpcap$/;"	m
LDFLAGS_D	Makefile	/^LDFLAGS_D = -g #-lpcap$/;"	m
LDLIBS	Makefile	/^LDLIBS := -luuid -pthread$/;"	m
RELEASEOBJECTS	Makefile	/^RELEASEOBJECTS = $(patsubst %,$(RELEASEOUTPUTDIR)\/%,$(_OBJECTS))$/;"	m
RELEASEOBJECTS_NO_MAIN	Makefile	/^RELEASEOBJECTS_NO_MAIN = $(filter-out $(RELEASEOUTPUTDIR)\/rm_daemon.o, $(RELEASEOBJECTS))$/;"	m
RELEASEOUTPUTDIR	Makefile	/^RELEASEOUTPUTDIR = ..\/build\/release$/;"	m
RELEASETARGET	Makefile	/^RELEASETARGET = ..\/build\/release\/rsyncme_d$/;"	m
RM_DO1	rm.c	64;"	d	file:
RM_DO16	rm.c	68;"	d	file:
RM_DO2	rm.c	65;"	d	file:
RM_DO4	rm.c	66;"	d	file:
RM_DO8	rm.c	67;"	d	file:
RM_LOGLEVEL	rm_cmd.c	/^enum rm_loglevel RM_LOGLEVEL = RM_LOGLEVEL_NORMAL;$/;"	v	typeref:enum:rm_loglevel
RM_LOGLEVEL	rm_daemon.c	/^enum rm_loglevel RM_LOGLEVEL = RM_LOGLEVEL_NORMAL;$/;"	v	typeref:enum:rm_loglevel
ROTLEFT	md5.c	19;"	d	file:
SOURCES	Makefile	/^SOURCES = rm_daemon.c rm_wq.c rm.c rm_tcp.c rm_rx.c rm_tx.c rm_error.c rm_core.c rm_do_msg.c rm_session.c rm_signal.c rm_serialize.c rm_util.c md5.c$/;"	m
SRCDIR	Makefile	/^SRCDIR = .$/;"	m
TESTOUTPUTDIR	Makefile	/^TESTOUTPUTDIR = ..\/test\/build\/release$/;"	m
TESTOUTPUTDIR_D	Makefile	/^TESTOUTPUTDIR_D = ..\/test\/build\/debug$/;"	m
TESTSRCDIR	Makefile	/^TESTSRCDIR = ..\/test\/src$/;"	m
_OBJECTS	Makefile	/^_OBJECTS = $(SOURCES:.c=.o)$/;"	m
_TESTOBJECTS	Makefile	/^_TESTOBJECTS = $(TESTSOURCES:.c=.o)$/;"	m
do_it_all	rm_daemon.c	/^do_it_all(int fd, struct rsyncme* rm) {$/;"	f	file:
help_hint	rm_cmd.c	/^static void help_hint(const char *name)$/;"	f	file:
main	rm_cmd.c	/^int main(int argc, char *argv[])$/;"	f
main	rm_daemon.c	/^int main(int argc, char *argv[]) {$/;"	f
md5_final	md5.c	/^void md5_final(MD5_CTX *ctx, BYTE hash[])$/;"	f
md5_init	md5.c	/^void md5_init(MD5_CTX *ctx)$/;"	f
md5_transform	md5.c	/^void md5_transform(MD5_CTX *ctx, const BYTE data[])$/;"	f
md5_update	md5.c	/^void md5_update(MD5_CTX *ctx, const BYTE data[], size_t len)$/;"	f
print_stats	rm_cmd.c	/^static void print_stats(struct rm_delta_reconstruct_ctx rec_ctx)$/;"	f	file:
rm	rm_daemon.c	/^struct rsyncme  rm;$/;"	v	typeref:struct:rsyncme
rm_adler32_1	rm.c	/^rm_adler32_1(const unsigned char *data, size_t len) {$/;"	f
rm_adler32_2	rm.c	/^rm_adler32_2(uint32_t adler, const unsigned char *data, size_t L) {$/;"	f
rm_adler32_roll	rm.c	/^rm_adler32_roll(uint32_t adler, unsigned char a_k,$/;"	f
rm_calc_msg_hdr_len	rm_do_msg.c	/^rm_calc_msg_hdr_len(struct rm_msg_hdr *hdr) {$/;"	f
rm_calc_msg_len	rm_do_msg.c	/^rm_calc_msg_len(void *arg) {$/;"	f
rm_copy_buffered	rm.c	/^rm_copy_buffered(FILE *x, FILE *y, size_t bytes_n) {$/;"	f
rm_copy_buffered_2	rm.c	/^rm_copy_buffered_2(FILE *x, size_t offset, void *dst, size_t bytes_n) {$/;"	f
rm_copy_buffered_offset	rm.c	/^rm_copy_buffered_offset(FILE *x, FILE *y, size_t bytes_n, size_t x_offset, size_t y_offset) {$/;"	f
rm_core_authenticate	rm_core.c	/^rm_core_authenticate(struct sockaddr_in *cli_addr) {$/;"	f
rm_core_connect	rm_tcp.c	/^enum rm_error rm_core_connect(int *fd, const char *host, uint16_t port, int domain, int type, const char **err_str)$/;"	f
rm_core_deinit	rm_core.c	/^enum rm_error rm_core_deinit(struct rsyncme *rm) {$/;"	f
rm_core_hdr_hash	rm_core.c	/^rm_core_hdr_hash(struct rm_msg_hdr *hdr) {$/;"	f
rm_core_init	rm_core.c	/^enum rm_error rm_core_init(struct rsyncme *rm) {$/;"	f
rm_core_resolve_host	rm_tcp.c	/^static int rm_core_resolve_host(const char *host, unsigned int port, struct addrinfo *hints, struct addrinfo **res)$/;"	f	file:
rm_core_select	rm_core.c	/^rm_core_select(int fd, enum rm_io_direction io_direction, uint16_t timeout_s, uint16_t timeout_us) {$/;"	f
rm_core_session_add	rm_core.c	/^rm_core_session_add(struct rsyncme *rm, struct rm_session *s) {$/;"	f
rm_core_session_find	rm_core.c	/^rm_core_session_find(struct rsyncme *rm, unsigned char session_id[RM_UUID_LEN]) {$/;"	f
rm_core_session_stop	rm_core.c	/^rm_core_session_stop(struct rm_session *s) {$/;"	f
rm_core_tcp_msg_ack_validate	rm_core.c	/^enum rm_error rm_core_tcp_msg_ack_validate(unsigned char *buf, int read_n) {$/;"	f
rm_core_tcp_msg_assemble	rm_core.c	/^rm_core_tcp_msg_assemble(int fd, enum rm_pt_type pt, void **body_raw, size_t bytes_n) {$/;"	f
rm_core_tcp_msg_hdr_validate	rm_core.c	/^enum rm_error rm_core_tcp_msg_hdr_validate(unsigned char *buf, int read_n) {$/;"	f
rm_core_tcp_msg_valid_pt	rm_core.c	/^enum rm_error rm_core_tcp_msg_valid_pt(unsigned char* buf) {$/;"	f
rm_core_validate_hash	rm_core.c	/^enum rm_error rm_core_validate_hash(unsigned char *buf) {$/;"	f
rm_daemon_sigint_handler	rm_daemon.c	/^static void rm_daemon_sigint_handler(int signo) {$/;"	f	file:
rm_daemon_signal_handler	rm_daemon.c	/^static void rm_daemon_signal_handler(int signo) {$/;"	f	file:
rm_daemon_sigtstp_handler	rm_daemon.c	/^static void rm_daemon_sigtstp_handler(int signo) {$/;"	f	file:
rm_deserialize_mem	rm_serialize.c	/^unsigned char* rm_deserialize_mem(const void *buf, void *dst, size_t bytes_n) {$/;"	f
rm_deserialize_msg	rm_serialize.c	/^struct rm_msg* rm_deserialize_msg(enum rm_pt_type pt, struct rm_msg_hdr *hdr, unsigned char *body_raw) {$/;"	f
rm_deserialize_msg_ack	rm_serialize.c	/^unsigned char* rm_deserialize_msg_ack(unsigned char *buf, struct rm_msg_ack *ack) {$/;"	f
rm_deserialize_msg_hdr	rm_serialize.c	/^unsigned char* rm_deserialize_msg_hdr(unsigned char *buf, struct rm_msg_hdr *hdr) {$/;"	f
rm_deserialize_msg_push	rm_serialize.c	/^unsigned char* rm_deserialize_msg_push(unsigned char *buf, struct rm_msg_hdr *hdr, struct rm_msg_push **m) {$/;"	f
rm_deserialize_msg_push_ack	rm_serialize.c	/^unsigned char* rm_deserialize_msg_push_ack(unsigned char *buf, struct rm_msg_push_ack *ack) {$/;"	f
rm_deserialize_msg_push_body	rm_serialize.c	/^unsigned char* rm_deserialize_msg_push_body(unsigned char *buf, struct rm_msg_push *m) {$/;"	f
rm_deserialize_size_t	rm_serialize.c	/^unsigned char* rm_deserialize_size_t(unsigned char *buf, size_t *v) {$/;"	f
rm_deserialize_string	rm_serialize.c	/^unsigned char* rm_deserialize_string(const void *buf, char *dst, size_t bytes_n) {$/;"	f
rm_deserialize_u16	rm_serialize.c	/^unsigned char* rm_deserialize_u16(unsigned char *buf, uint16_t *v) {$/;"	f
rm_deserialize_u32	rm_serialize.c	/^unsigned char* rm_deserialize_u32(unsigned char *buf, uint32_t *v) {$/;"	f
rm_deserialize_u64	rm_serialize.c	/^unsigned char* rm_deserialize_u64(unsigned char *buf, uint64_t *v) {$/;"	f
rm_deserialize_u8	rm_serialize.c	/^unsigned char* rm_deserialize_u8(unsigned char *buf, uint8_t *v) {$/;"	f
rm_do_msg_pull_rx	rm_do_msg.c	/^rm_do_msg_pull_rx(struct rsyncme *rm, unsigned char *buf) {$/;"	f
rm_do_msg_pull_tx	rm_do_msg.c	/^rm_do_msg_pull_tx(struct rsyncme *rm, unsigned char *buf) {$/;"	f
rm_do_msg_push_rx	rm_do_msg.c	/^void* rm_do_msg_push_rx(void* arg) {$/;"	f
rm_err	rm_error.c	/^void rm_err(const char *s)$/;"	f
rm_fast_check_block	rm.c	/^rm_fast_check_block(const unsigned char *data, size_t len) {$/;"	f
rm_fast_check_roll	rm.c	/^rm_fast_check_roll(uint32_t adler, unsigned char a_k,$/;"	f
rm_fast_check_roll_tail	rm.c	/^rm_fast_check_roll_tail(uint32_t adler, unsigned char a_k, size_t L) {$/;"	f
rm_file_cmp	rm.c	/^rm_file_cmp(FILE *x, FILE *y, size_t x_offset, size_t y_offset, size_t bytes_n) {$/;"	f
rm_fpread	rm.c	/^rm_fpread(void *buf, size_t size, size_t items_n, size_t offset, FILE *f) {$/;"	f
rm_fpwrite	rm.c	/^rm_fpwrite(const void *buf, size_t size, size_t items_n, size_t offset, FILE *f) {$/;"	f
rm_get_msg_hdr_flags	rm_serialize.c	/^uint8_t rm_get_msg_hdr_flags(unsigned char *buf) {$/;"	f
rm_get_msg_hdr_hash	rm_serialize.c	/^uint32_t rm_get_msg_hdr_hash(unsigned char *buf) {$/;"	f
rm_get_msg_hdr_len	rm_serialize.c	/^uint16_t rm_get_msg_hdr_len(unsigned char *buf) {$/;"	f
rm_get_msg_hdr_pt	rm_serialize.c	/^uint8_t rm_get_msg_hdr_pt(unsigned char *buf) {$/;"	f
rm_get_unique_string	rm.c	/^rm_get_unique_string(char name[RM_UNIQUE_STRING_LEN]) {$/;"	f
rm_gettid	rm.c	/^uint64_t rm_gettid(void) {$/;"	f
rm_launch_thread	rm.c	/^rm_launch_thread(pthread_t *t, void*(*f)(void*), void *arg, int detachstate) {$/;"	f
rm_md5	rm.c	/^rm_md5(const unsigned char *data, size_t len,$/;"	f
rm_msg_ack_alloc	rm_do_msg.c	/^enum rm_error rm_msg_ack_alloc(struct rm_msg_ack *ack) {$/;"	f
rm_msg_ack_free	rm_do_msg.c	/^void rm_msg_ack_free(struct rm_msg_ack *ack) {$/;"	f
rm_msg_push_ack_alloc	rm_do_msg.c	/^enum rm_error rm_msg_push_ack_alloc(struct rm_msg_push_ack *ack) {$/;"	f
rm_msg_push_ack_free	rm_do_msg.c	/^void rm_msg_push_ack_free(struct rm_msg_push_ack *ack) {$/;"	f
rm_msg_push_alloc	rm_do_msg.c	/^enum rm_error rm_msg_push_alloc(struct rm_msg_push *msg) {$/;"	f
rm_msg_push_dtor	rm_do_msg.c	/^rm_msg_push_dtor(void *arg) {$/;"	f
rm_msg_push_free	rm_do_msg.c	/^void rm_msg_push_free(struct rm_msg_push *msg) {$/;"	f
rm_perr	rm_error.c	/^void rm_perr(const char *s)$/;"	f
rm_perr_abort	rm_error.c	/^void rm_perr_abort(const char *s)$/;"	f
rm_roll_proc_cb_1	rm.c	/^rm_roll_proc_cb_1(void *arg) {$/;"	f
rm_rolling_ch	rm.c	/^rm_rolling_ch(const unsigned char *data, size_t len,$/;"	f
rm_rolling_ch_proc	rm.c	/^rm_rolling_ch_proc(struct rm_session *s, const struct twhlist_head *h, pthread_mutex_t *h_mutex,$/;"	f
rm_rolling_ch_proc_tx	rm.c	/^rm_rolling_ch_proc_tx(struct rm_roll_proc_cb_arg  *cb_arg, rm_delta_f *delta_f, enum RM_DELTA_ELEMENT_TYPE type,$/;"	f	file:
rm_rx_f_tx_ch_ch	rm_rx.c	/^int rm_rx_f_tx_ch_ch(const struct f_tx_ch_ch_ref_arg_1 arg)$/;"	f
rm_rx_f_tx_ch_ch_ref_1	rm_rx.c	/^int rm_rx_f_tx_ch_ch_ref_1(const struct f_tx_ch_ch_ref_arg_1 arg)$/;"	f
rm_rx_insert_nonoverlapping_ch_ch_array	rm_rx.c	/^int rm_rx_insert_nonoverlapping_ch_ch_array(FILE *f, const char *fname, struct rm_ch_ch *checksums, size_t L,$/;"	f
rm_rx_insert_nonoverlapping_ch_ch_ref	rm_rx.c	/^int rm_rx_insert_nonoverlapping_ch_ch_ref(int fd, FILE *f, const char *fname, struct twhlist_head *h, size_t L,$/;"	f
rm_rx_insert_nonoverlapping_ch_ch_ref_link	rm_rx.c	/^int rm_rx_insert_nonoverlapping_ch_ch_ref_link(FILE *f, const char *fname, struct twlist_head *l,$/;"	f
rm_rx_process_delta_element	rm_rx.c	/^enum rm_error rm_rx_process_delta_element(void *arg)$/;"	f
rm_rx_tx_delta_element	rm_rx.c	/^enum rm_error rm_rx_tx_delta_element(void *arg)$/;"	f
rm_serialize_char	rm_serialize.c	/^unsigned char* rm_serialize_char(unsigned char *buf, char v) {$/;"	f
rm_serialize_mem	rm_serialize.c	/^unsigned char* rm_serialize_mem(void *buf, const void *src, size_t bytes_n) {$/;"	f
rm_serialize_msg_ack	rm_serialize.c	/^unsigned char* rm_serialize_msg_ack(unsigned char *buf, struct rm_msg_ack *m) {$/;"	f
rm_serialize_msg_hdr	rm_serialize.c	/^unsigned char* rm_serialize_msg_hdr(unsigned char *buf, struct rm_msg_hdr *h) {$/;"	f
rm_serialize_msg_pull	rm_serialize.c	/^unsigned char* rm_serialize_msg_pull(unsigned char *buf, struct rm_msg_pull *m) {$/;"	f
rm_serialize_msg_push	rm_serialize.c	/^unsigned char* rm_serialize_msg_push(unsigned char *buf, struct rm_msg_push *m) {$/;"	f
rm_serialize_msg_push_ack	rm_serialize.c	/^unsigned char* rm_serialize_msg_push_ack(unsigned char *buf, struct rm_msg_push_ack *m) {$/;"	f
rm_serialize_size_t	rm_serialize.c	/^unsigned char* rm_serialize_size_t(unsigned char *buf, size_t v) {$/;"	f
rm_serialize_string	rm_serialize.c	/^unsigned char* rm_serialize_string(unsigned char *buf, const void *src, size_t bytes_n) {$/;"	f
rm_serialize_u16	rm_serialize.c	/^unsigned char* rm_serialize_u16(unsigned char *buf, uint16_t v) {$/;"	f
rm_serialize_u32	rm_serialize.c	/^unsigned char* rm_serialize_u32(unsigned char *buf, uint32_t v) {$/;"	f
rm_serialize_u64	rm_serialize.c	/^unsigned char* rm_serialize_u64(unsigned char *buf, uint64_t v) {$/;"	f
rm_serialize_u8	rm_serialize.c	/^unsigned char* rm_serialize_u8(unsigned char *buf, uint8_t v) {$/;"	f
rm_session_assign_from_msg_pull	rm_session.c	/^enum rm_error rm_session_assign_from_msg_pull(struct rm_session *s, const struct rm_msg_pull *m)$/;"	f
rm_session_assign_validate_from_msg_push	rm_session.c	/^enum rm_error rm_session_assign_validate_from_msg_push(struct rm_session *s, struct rm_msg_push *m, int fd)$/;"	f
rm_session_ch_ch_rx_f	rm_session.c	/^void *rm_session_ch_ch_rx_f(void *arg)$/;"	f
rm_session_ch_ch_tx_f	rm_session.c	/^void *rm_session_ch_ch_tx_f(void *arg)$/;"	f
rm_session_create	rm_session.c	/^struct rm_session *rm_session_create(enum rm_session_type t)$/;"	f
rm_session_delta_rx_f_local	rm_session.c	/^void *rm_session_delta_rx_f_local(void *arg)$/;"	f
rm_session_delta_rx_f_remote	rm_session.c	/^void* rm_session_delta_rx_f_remote(void *arg)$/;"	f
rm_session_delta_tx_f	rm_session.c	/^void *rm_session_delta_tx_f(void *arg)$/;"	f
rm_session_free	rm_session.c	/^void rm_session_free(struct rm_session *s)$/;"	f
rm_session_push_local_deinit	rm_session.c	/^static void rm_session_push_local_deinit(struct rm_session_push_local *prvt)$/;"	f	file:
rm_session_push_local_free	rm_session.c	/^void rm_session_push_local_free(struct rm_session_push_local *prvt)$/;"	f
rm_session_push_local_init	rm_session.c	/^void rm_session_push_local_init(struct rm_session_push_local *prvt)$/;"	f
rm_session_push_rx_free	rm_session.c	/^void rm_session_push_rx_free(struct rm_session_push_rx *prvt)$/;"	f
rm_session_push_rx_init	rm_session.c	/^void rm_session_push_rx_init(struct rm_session_push_rx *prvt)$/;"	f
rm_session_push_tx_free	rm_session.c	/^void rm_session_push_tx_free(struct rm_session_push_tx *prvt)$/;"	f
rm_session_push_tx_init	rm_session.c	/^void rm_session_push_tx_init(struct rm_session_push_tx *prvt)$/;"	f
rm_sigint_h	rm_signal.c	/^rm_sigint_h(int signum) {$/;"	f
rm_tcp_connect	rm_tcp.c	/^enum rm_error rm_tcp_connect(int *fd, const char *host, uint16_t port, int domain, const char **err_str)$/;"	f
rm_tcp_connect_nonblock_timeout	rm_tcp.c	/^enum rm_error rm_tcp_connect_nonblock_timeout(int *fd, const char *host, uint16_t port, int domain, uint16_t timeout_s, uint16_t timeout_us, const char **err_str)$/;"	f
rm_tcp_connect_nonblock_timeout_once	rm_tcp.c	/^enum rm_error rm_tcp_connect_nonblock_timeout_once(int fd, struct addrinfo *res, uint16_t timeout_s, uint16_t timeout_us)$/;"	f
rm_tcp_connect_nonblock_timeout_once_sockaddr	rm_tcp.c	/^enum rm_error rm_tcp_connect_nonblock_timeout_once_sockaddr(int fd, struct sockaddr *peer_addr, uint16_t timeout_s, uint16_t timeout_us)$/;"	f
rm_tcp_connect_nonblock_timeout_sockaddr	rm_tcp.c	/^enum rm_error rm_tcp_connect_nonblock_timeout_sockaddr(int *fd, struct sockaddr *peer_addr, uint16_t timeout_s, uint16_t timeout_us, const char **err_str)$/;"	f
rm_tcp_listen	rm_tcp.c	/^int rm_tcp_listen(int *listen_fd, in_addr_t addr, uint16_t *port, int reuseaddr, int backlog)$/;"	f
rm_tcp_read	rm_tcp.c	/^enum rm_error rm_tcp_read(int fd, void *dst, size_t bytes_n)$/;"	f
rm_tcp_rx	rm_tcp.c	/^enum rm_error rm_tcp_rx(int fd, void *dst, size_t bytes_n)$/;"	f
rm_tcp_set_socket_blocking_mode	rm_tcp.c	/^int rm_tcp_set_socket_blocking_mode(int fd, uint8_t on)$/;"	f
rm_tcp_tx	rm_tcp.c	/^enum rm_error rm_tcp_tx(int fd, void *src, size_t bytes_n)$/;"	f
rm_tcp_tx_ch_ch	rm_tcp.c	/^int rm_tcp_tx_ch_ch(int fd, const struct rm_ch_ch_ref *e)$/;"	f
rm_tcp_tx_ch_ch_ref	rm_tcp.c	/^int rm_tcp_tx_ch_ch_ref(int fd, const struct rm_ch_ch_ref *e)$/;"	f
rm_tcp_tx_msg_ack	rm_tcp.c	/^enum rm_error rm_tcp_tx_msg_ack(int fd, enum rm_pt_type pt, enum rm_error status, struct rm_session *s)$/;"	f
rm_tcp_write	rm_tcp.c	/^enum rm_error rm_tcp_write(int fd, const void *src, size_t bytes_n)$/;"	f
rm_tx_local_push	rm_tx.c	/^rm_tx_local_push(const char *x, const char *y, const char *z, size_t L, size_t copy_all_threshold,$/;"	f
rm_tx_remote_push	rm_tx.c	/^int rm_tx_remote_push(const char *x, const char *y, const char *z, size_t L, size_t copy_all_threshold, size_t copy_tail_threshold, size_t send_threshold, rm_push_flags flags, struct rm_delta_reconstruct_ctx *rec_ctx, const char *addr, uint16_t port, uint16_t timeout_s, uint16_t timeout_us, const char **err_str) {$/;"	f
rm_util_chdir_umask_openlog	rm_util.c	/^rm_util_chdir_umask_openlog(const char *dir, int noclose, const char *logname, uint8_t ignore_signals) {$/;"	f
rm_util_daemonize	rm_util.c	/^rm_util_daemonize(const char *dir, int noclose, const char *logname) {$/;"	f
rm_util_dt	rm_util.c	/^rm_util_dt(char *buf) {$/;"	f
rm_util_dt_detail	rm_util.c	/^rm_util_dt_detail(char *buf) {$/;"	f
rm_util_log	rm_util.c	/^rm_util_log(FILE *stream, const char *fmt, ...) {$/;"	f
rm_util_log_perr	rm_util.c	/^rm_util_log_perr(FILE *stream, const char *fmt, ...) {$/;"	f
rm_util_openlogs	rm_util.c	/^rm_util_openlogs(const char *dir, const char *name) {$/;"	f
rm_work_create	rm_wq.c	/^rm_work_create(enum rm_work_type task, struct rsyncme* rm, struct rm_msg* msg, int fd, void*(*f)(void*), void(*f_dtor)(void*)) {$/;"	f
rm_work_free	rm_wq.c	/^rm_work_free(struct rm_work* work) {$/;"	f
rm_work_init	rm_wq.c	/^rm_work_init(struct rm_work* work, enum rm_work_type task, struct rsyncme* rm, struct rm_msg* msg, int fd, void*(*f)(void*), void(*f_dtor)(void*)) {$/;"	f
rm_work_type_str	rm_wq.c	/^const char * rm_work_type_str[] = {$/;"	v
rm_wq_call_sync_dtor	rm_wq.c	/^rm_wq_call_sync_dtor(struct rm_work *work) {$/;"	f	file:
rm_wq_queue_delayed_work	rm_wq.c	/^rm_wq_queue_delayed_work(struct rm_workqueue *q, struct rm_work* work, unsigned int delay) {$/;"	f
rm_wq_queue_work	rm_wq.c	/^rm_wq_queue_work(struct rm_workqueue *wq, struct rm_work* work) {$/;"	f
rm_wq_worker_deinit	rm_wq.c	/^static enum rm_error rm_wq_worker_deinit(struct rm_worker *w) {$/;"	f	file:
rm_wq_worker_f	rm_wq.c	/^rm_wq_worker_f(void *arg) {$/;"	f	file:
rm_wq_worker_init	rm_wq.c	/^rm_wq_worker_init(struct rm_worker *w, struct rm_workqueue *wq) {$/;"	f	file:
rm_wq_workqueue_create	rm_wq.c	/^rm_wq_workqueue_create(uint32_t workers_n, const char *name) {$/;"	f
rm_wq_workqueue_deinit	rm_wq.c	/^enum rm_error rm_wq_workqueue_deinit(struct rm_workqueue *wq) {$/;"	f
rm_wq_workqueue_free	rm_wq.c	/^void rm_wq_workqueue_free(struct rm_workqueue *wq) {                \/* queue MUST be empty now *\/$/;"	f
rm_wq_workqueue_init	rm_wq.c	/^rm_wq_workqueue_init(struct rm_workqueue *wq, uint32_t workers_n, const char *name) {$/;"	f
rm_wq_workqueue_stop	rm_wq.c	/^enum rm_error rm_wq_workqueue_stop(struct rm_workqueue *wq) {$/;"	f
rsyncme_d_help_hint	rm_daemon.c	/^static void rsyncme_d_help_hint(const char *name)$/;"	f	file:
rsyncme_d_range_error	rm_daemon.c	/^static void rsyncme_d_range_error(char argument, unsigned long value)$/;"	f	file:
rsyncme_d_usage	rm_daemon.c	/^static void rsyncme_d_usage(const char *name)$/;"	f	file:
rsyncme_range_error	rm_cmd.c	/^static void rsyncme_range_error(char argument, unsigned long value)$/;"	f	file:
rsyncme_usage	rm_cmd.c	/^static void rsyncme_usage(const char *name)$/;"	f	file:
